//
//  AuthorListPresenter.swift
//  MBlogging
//
//  Created by Sujata Chakraborty on 26/09/2019.
//  Copyright (c) 2019 Sujata Chakraborty. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AuthorListPresentationLogic
{
    /**
     Call back from the Interactor with the response it received from the Server
     */
    func presentAuthorList(response: AuthorList.FetchAuthorList.Response)
    
}

class AuthorListPresenter: AuthorListPresentationLogic
{
    
    
    weak var viewController: AuthorListDisplayLogic?
    var displayedAuthors: [AuthorList.FetchAuthorList.ViewModel.DisplayAuthorList] = []
    
    
    
    //MARK : AuthorListPresentationLogic functions
    func presentAuthorList(response: AuthorList.FetchAuthorList.Response)
    {
        
        if let authorList = response.authors
        {
            for author in authorList {
                
                let strAuthorId = String(author.id)
                let displayedAuthor = AuthorList.FetchAuthorList.ViewModel.DisplayAuthorList(id: strAuthorId, name: author.name, userName: author.userName, email: author.email, avatarUrl: author.avatarUrl)
                displayedAuthors.append(displayedAuthor)
            }
            let viewModel = AuthorList.FetchAuthorList.ViewModel.init(authorList: displayedAuthors)
            viewController?.displayAuthorList(viewModel: viewModel)
        }
        else if let error = response.error
        {
            viewController?.errorReceivedInAuthorFetchRequest(error: error)
            
        }
        else
        {
            //Generic error
            let mbError = MBError.init(mbErrorCode: MBErrorCode.ServerError)
            mbError.mbErrorDebugInfo = "Generic error while fetching Authors list"
            viewController?.errorReceivedInAuthorFetchRequest(error: mbError)
            
        }
    }
}
